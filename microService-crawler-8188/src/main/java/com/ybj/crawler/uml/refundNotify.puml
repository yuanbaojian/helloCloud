@startuml

autonumber


participant "定时任务" as xxl
participant "payment-data / go-trade-data-server" as pd #orange
participant "发送邮件" as se
participant "商户查询" as mi

database "payment_data" as pdb




xxl -> pd : 定时任务触发\n默认00:00
pd -> pd: 获得参数 \n beginTime endTime 默认前一整天

pd -> pdb :获取昨天退款失败的商户 refundFailMerchants\npayment_data_refund_order
pd -> pd : 获取对外支付方式名称映射paymentMethodAlias\n/configcenter/dataDictManager/typeList/{type}

loop 遍历refundFailMerchants
	pd -> pdb :获得失败的退款单refundFails\npayment_data_refund_order
	pd -> pd: 得到tradeOrderIds集合
	pd -> pdb :获得交易原单 tradeAndReferenceOrderMap\npayment_data_payment_order
	alt tradeOrderIds.size != tradeAndReferenceOrderMap.size
		pd -> pd: 云日志告警 & 抛出异常
	else 等于
		pd ->pd :组装RefundFailNotifysBO对象
	end
	pd -> se: 发送邮件
	se -> mi: 获取商户邮箱、店铺名称\n/api/v1/merchant-service/onboardQuery
	alt 查询为null
		mi->mi:云日志告警
		mi -> se: 返回 null
	else 查询异常
		mi ->mi: 云日志告警
		mi -> mi :插入cmd任务
		mi -> se: 返回null
  else 查询正常
		mi -> se:返回MerchantInfoBO
	end

	alt MerchantInfoBO ==null
		se -> pd : return
	end

	se -> se:获取对外支付方式
	se -> pdb: 翻译支付方式\npayment_data_multi_language
	se -> se: 构建邮件内容
	se -> se: 发送邮件消息kafka
end

pd -> pd: 失败时，触发企微告警




@enduml